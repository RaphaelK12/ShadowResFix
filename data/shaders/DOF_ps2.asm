// Summary: Fixed blurry screen, improved Definition, console-like gamma, fixed DOF resolution scaling + dithering mask + HQ motion blur + fixed motion blur FPS scaling
// Generated by Microsoft (R) HLSL Shader Compiler 9.26.952.2844
//
// Parameters:
//
//   sampler2D AdapLumSampler;
//   sampler2D BloomSampler;
//   float4 ColorCorrect;
//   float4 ColorShift;
//   float Exposure;
//   sampler2D GBufferTextureSampler2;
//   sampler2D GBufferTextureSampler3;
//   sampler2D HDRSampler;
//   sampler2D JitterSampler;
//   float PLAYER_MASK;
//   sampler2D StencilCopySampler;
//   float4 TexelSize;
//   float4 ToneMapParams;
//   float4 deSatContrastGamma;
//   float4 dofBlur;
//   float4 dofDist;
//   float4 dofProj;
//   float gDirectionalMotionBlurLength;
//   float4 globalScreenSize;
//   row_major float4x4 motionBlurMatrix;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   globalScreenSize             c44      1
//   Exposure                     c66      1
//   motionBlurMatrix             c72      4
//   TexelSize                    c76      1
//   dofProj                      c77      1
//   dofDist                      c78      1
//   dofBlur                      c79      1
//   gDirectionalMotionBlurLength c80      1
//   ToneMapParams                c81      1
//   deSatContrastGamma           c82      1
//   ColorCorrect                 c83      1
//   ColorShift                   c84      1
//   PLAYER_MASK                  c85      1
//   GBufferTextureSampler2       s0       1
//   GBufferTextureSampler3       s1       1
//   HDRSampler                   s2       1
//   BloomSampler                 s3       1
//   AdapLumSampler               s4       1
//   JitterSampler                s5       1
//   StencilCopySampler           s6       1
//

    ps_3_0
    // def c219, 1.8395173895e+25, 3.9938258725e+24, 4.5435787456e+30, 1.1420582484e-42 // 815
    def c127, 0.9999999, 1, 0, 0	// LogDepth constants
    def c0, 58.1640015, 47.1300011, 0, 0
    def c1, 0, 0.212500006, 0.715399981, 0.0720999986
    def c2, 0.25, 1, 256, 0
    def c3, 0, 2, 4, 8
    def c4, -0.5, -1.5, 1.5, 0.5
    def c5, 2, -1, 0.125, 0
    def c6, 256, 2, 4, 8
	def c10, 1.3333333, 1.0526316, 1.05577, 0.0762		// Gamma Constants
	def c11, 0.0333333, 0, 0, 0 // frametime target
	// ---------------------------------------------------------------- DOF Constants ---------------------------------------------------------------
	// Circular Kernel from GPU Zen 'Practical Gather-based Bokeh Depth of Field' by Wojciech Sterna
	def c99, 0.0013889, 0.0416667, 0.6666667, 1080
	// first ring
	def c100, 1.000000, 0.000000, 0.707107, 0.707107
	def c101, -0.000000, 1.000000, -0.707107, 0.707107
	def c102, -1.000000, -0.000000, -0.707106, -0.707107
	def c103, 0.000000, -1.000000, 0.707107, -0.707107
	// second ring
	def c104, 2.000000, 0.000000, 1.847760, 0.765366
	def c105, 1.414214, 1.414214, 0.765366, 1.847760
	def c106, -0.000000, 2.000000, -0.765368, 1.847758
	def c107, -1.414214, 1.414214, -1.847760, 0.765366
	def c108, -2.000000, -0.000000, -1.847758, -0.765368
	def c109, -1.414212, -1.414214, -0.765366, -1.847760
	def c110, 0.000000, -2.000000, 0.765368, -1.847758
	def c111, 1.414214, -1.414214, 1.847760, -0.765366
	// third ring
	def c112, 3.000000, 0.000000, 2.897778, 0.776457
	def c113, 2.598075, 1.500000, 2.121321, 2.121321
	def c114, 1.500000, 2.598078, 0.776457, 2.897778
	def c115, -0.000000, 3.000000, -0.776457, 2.897778
	def c116, -1.500000, 2.598075, -2.121321, 2.121321
	def c117, -2.598078, 1.500000, -2.897778, 0.776457
	def c118, -3.000000, -0.000000, -2.897778, -0.776460
	def c119, -2.598075, -1.500000, -2.121318, -2.121321
	def c120, -1.499997, -2.598078, -0.776457, -2.897778
	def c121, 0.000000, -3.000000, 0.776457, -2.897778
	def c122, 1.500000, -2.598075, 2.121321, -2.121321
	def c123, 2.598078, -1.499997, 2.897778, -0.776454
	// --------------------------------------------------------------------------------------
	// ---------------------------------- Dithering Mask Constants ---------------------------
	def c130, -1, 0, 1, 0
	def c131, 0.012156862745098, 0.016078431372549, 0.0435294117647059, 0.0474509803921569 // 3.1, 4.1, 11.1, 12.1
	def c132, 0.5141176470588235, 0.5180392156862745, 0.5454901960784314, 0.5494117647058824 // 131.1, 132.1, 139.1, 140.1
	def c133, 0.027843137254902, 0.0007843137254902, 0, 0 // 7
	defi i1, 3, 0, 0, 0
	// ------------------------------------------------------------------------------------------
    defi i0, 7, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
	mov r31, c1.x
    texld r0, v0, s1
	// ---------------------- Log2Linear -----------------------------------
	if_ne r0.x, c127.y
		rcp r20.x, c128.x
		mul r20.x, r20.x, c128.y
		pow r20.x, r20.x, r0.x
		mul r20.x, r20.x, c128.x	// W_clip
		
		add r20.y, r20.x, -c128.x
		add r20.z, c128.y, -c128.x
		mul r20.y, r20.y, c128.y
		mul r20.z, r20.z, r20.x
		rcp r20.z, r20.z
		mul r20.w, r20.y, r20.z		// Linear depth		
		min r1, r20.w, c127.x		// FP error hack
	endif
	// ----------------------------------------------------------------------------
	// --------------------- Depth of Field ---------------------------------------------------------------
	// texldl r21, v0, s2
	
	// c77 = 0.2, 1499.999878, 0.73638,   0.414214 
	// c78 = 0.05, 149.899994,  74.949997, 75.05   
	// c79 = 0.0, 0.109646,    0.4,      1.0       
	
	if_ne c222.y, r31.x
		mov r20.z, c79.z
		if_gt r20.z, c1.x		// don't run if DOF intensity = 0
					mov r20, c99
					mov r21, c1.x		// sum = 0
					mov r22, c76
					if_gt c44.y, r20.w
					mul r22, r22, r20.z
					endif
					mul r22, r22, c44.y // multiply by resolution height
					mul r22, r22, r20.x // divide by 720

					// first ring

					mad r23.xy, r22, c100.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c100.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c101.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c101.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c102.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c102.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c103.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c103.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23

					// second ring

					mad r23.xy, r22, c104.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c104.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c105.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c105.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c106.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c106.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c107.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c107.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c108.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c108.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c109.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c109.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c110.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c110.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c111.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c111.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23

					// third ring

					if_gt c44.y, r20.w
					mad r23.xy, r22, c112.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c112.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c113.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c113.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c114.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c114.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c115.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c115.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c116.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c116.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c117.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c117.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c118.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c118.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c119.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c119.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c120.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c120.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c121.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c121.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c122.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c122.zw, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c123.xy, v0
					texldl r23, r23, s2
					add r21, r21, r23
					mad r23.xy, r22, c123.zw, v0
					texldl r23, r23, s2
				add r21, r21, r23
				mul r20.y, r20.y, c4.w
			endif
			mul r21, r21, r20.y	// average
		endif
	endif
	texldl r0, v0.xy, s2
	mul r1, r1.xxxx, c77.y
	if_ge r1.x, c78.y
		mov r21, r0
	endif
	// -------------------------------------------------------------------------------------
	// --------------------------------------------------------------------------------------
    mov oC0.xyz, r21
    mov oC0.w, c2.y

// approximately 161 instruction slots used (13 texture, 148 arithmetic)
